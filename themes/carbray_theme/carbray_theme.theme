<?php
/**
 * @file
 * Bootstrap sub-theme.
 *
 * Place your custom PHP code in this file.
 */

use Drupal\user\Entity\User;
use Drupal\Core\Url;
use Drupal\Core\Link;
use Drupal\carbray\ProgressBar;
use Drupal\node\Entity\Node;


/**
 * Implements hook_preprocess_html().
 */
function carbray_theme_preprocess_html(&$variables) {
  // Look at the url collect args to display them as body class.
  $current_path = \Drupal::service('path.current')->getPath();
  $path_args = explode('/', $current_path);
  $path_string = 'path';
  foreach ($path_args as $path_arg) {
    $path_string .= $path_arg;
    if ($path_arg != end($path_args)) {
      $path_string .= '-';
    }
  }
  $variables['attributes']['class'][] = $path_string;
}

function carbray_theme_preprocess_page(&$variables) {
  $current_path = \Drupal::service('path.current')->getPath();

  // Front page log ing and user/password page lose all header vars except alert messages.
  if ($current_path == '/user/password' || $variables['is_front']) {
    // The header var only prints alert messages, the rest is unset.
    unset($variables['page']['header']['carbray_theme_breadcrumbs']);
    unset($variables['page']['header']['carbray_theme_local_actions']);
    unset($variables['page']['header']['carbray_theme_local_tasks']);
    unset($variables['page']['header']['carbray_theme_page_title']);
  }
}

function carbray_theme_preprocess_region(&$variables) {
  $current_path = \Drupal::service('path.current')->getPath();

  if ($current_path == '/user/password' || $variables['is_front']) {
    if ($variables['elements']['#region'] == 'header') {
      // Header region displays alert messages when form submitted errors;
      // Let's bootstrap center it to match content_classes.
      $variables['attributes']['class'][] = 'col-sm-3 col-sm-offset-4';
    }
  }

  if ($variables['elements']['#region'] == 'navigation') {
    $variables['attributes']['class'][] = 'clearfix';
  }
}

/**
 * Implements template_preprocess_form_element_label().
 *
 * @param $variables
 */
function carbray_theme_preprocess_form_element_label(&$variables) {
  $id = isset($variables['element']['#id']) ? $variables['element']['#id'] : '';
  $form_id = isset($variables['element']['#form_id']) ? $variables['element']['#form_id'] : '';
  // Hide login form labels.
  if ($form_id == 'user_login_form' && ($id == 'edit-name' OR $id == 'edit-pass')) {
    $variables['title_display'] = 'invisible';
  }
}

/**
 * Implements hook_preprocess_page_title().
 */
function carbray_theme_preprocess_page_title(&$variables) {
  $current_path = \Drupal::service('path.current')->getPath();

  if ($current_path == '/node/2' || $current_path == '/node/3' || $current_path == '/node/33') {
    // Landing page for abogados. Replace page title with logged in user nombre + apellido.
    $user = User::load(\Drupal::currentUser()->id());
    $nombre = $user->get('field_nombre')->value;
    $apellido = $user->get('field_apellido')->value;
    $variables['title'] = $nombre . ' ' . $apellido;
    return;
  }

  // Logged in user accessing user/%uid page gets page title
  // rewritten from username to field_nombre, mail.
  if (\Drupal::currentUser()->isAuthenticated()) {
    $path_args = explode('/', $current_path);
    $id = 0;
    foreach ($path_args as $path_arg) {
      if (is_numeric($path_arg)) {
        $id = $path_arg;
      }
    }
    $user = ($id) ? User::load($id) : \Drupal::currentUser();
    if (in_array('user', $path_args) && $user->isAuthenticated()) {
      $nombre = $user->get('field_nombre')->value . ' ' . $user->get('field_apellido')->value;
      if ($nombre) {
        $nombre .= ', ';
      }
      $mail = $user->get('mail')->value;

      $workers = get_carbray_workers();
      // If the user page we're viewing refers to a Carbray worker.
      if (array_key_exists($id, $workers)) {
        $variables['title'] = 'Trabajador: ' . $nombre . $mail;
      }
      else {
        $variables['title'] = 'Ficha del cliente - ' . $nombre . $mail;

      }
    }
    elseif (in_array('node', $path_args) && $user->isAuthenticated()) {
      $node = Node::load($id);
      if ($node->bundle() == 'expediente') {
        $variables['title'] = 'Expediente ' . $node->label();

      }
    }
  }


}

function carbray_theme_preprocess_block(&$variables) {
}

/**
 * Implements hook_preprocess_user().
 */
function carbray_theme_preprocess_user(&$variables) {
  // Adds 'mail' var to user.html.twig.
  /** @var User $account */
  $account = $variables['elements']['#user'];
  $variables['mail'] = $account->get('mail')->value;
}

/**
 * Implements template_preprocess_taxonomy_term().
 * @todo: move all this to a module??
 */
function carbray_theme_preprocess_taxonomy_term(&$variables) {
  $db = \Drupal::database();
  $term = $variables['elements']['#taxonomy_term'];
  $tid = $term->id();
  $type = $term->bundle();


  if ($type === 'departamento') {
    // Terms of taxonomy 'departamento' display table of its workers.
    $sql = "SELECT user__field_nombre.field_nombre_value AS nombre,
                  user__field_apellido.field_apellido_value AS apellido,
                  mail,
                  users_field_data.uid,
                  nfd.nid AS field_objetivo_trabajador_users_field_data_nid,
                  taxonomy_term_field_data_user__field_departamento.tid AS departamento_tid,
                  field_objetivo_cifra_value
            FROM {users_field_data} users_field_data
            LEFT JOIN {node__field_objetivo_trabajador} node__field_objetivo_trabajador ON users_field_data.uid = node__field_objetivo_trabajador.field_objetivo_trabajador_target_id AND node__field_objetivo_trabajador.deleted = '0'
            LEFT JOIN {node_field_data} nfd ON node__field_objetivo_trabajador.entity_id = nfd.nid
            LEFT JOIN {user__field_departamento} user__field_departamento ON users_field_data.uid = user__field_departamento.entity_id AND (user__field_departamento.deleted = '0' AND user__field_departamento.langcode = users_field_data.langcode)
            LEFT JOIN {taxonomy_term_field_data} taxonomy_term_field_data_user__field_departamento ON user__field_departamento.field_departamento_target_id = taxonomy_term_field_data_user__field_departamento.tid
            INNER JOIN {user__roles} user__roles ON users_field_data.uid = user__roles.entity_id
            LEFT JOIN {user__field_nombre} user__field_nombre ON users_field_data.uid = user__field_nombre.entity_id AND (user__field_nombre.deleted = '0' AND user__field_nombre.langcode = users_field_data.langcode)
            LEFT JOIN {user__field_apellido} user__field_apellido ON users_field_data.uid = user__field_apellido.entity_id AND (user__field_apellido.deleted = '0' AND user__field_apellido.langcode = users_field_data.langcode)
            LEFT JOIN {node__field_objetivo_cifra} oc ON nfd.nid = oc.entity_id
            WHERE (((user__roles.roles_target_id IN('worker', 'carbray_administrator')))
            AND ((taxonomy_term_field_data_user__field_departamento.tid = :tid )))
            AND (users_field_data.status = '1')
            ORDER BY apellido ASC";

    $trabajadores = $db->query($sql, array(':tid' => $tid))->fetchAll();
    $rows = array();
    foreach ($trabajadores as $trabajador) {
      $url = Url::fromRoute('entity.user.canonical', array('user' => $trabajador->uid));
      $user_link = Link::fromTextAndUrl($trabajador->nombre . ' ' . $trabajador->apellido, $url);

      $rows[] = array(
        $user_link,
        $trabajador->mail,
        $trabajador->field_objetivo_cifra_value,
      );
    }

    $header = array(
      'Nombre',
      'Email',
      'Objetivo actual individual',
    );
    $build = array(
      '#type' => 'table',
      '#header' => $header,
      '#rows' => $rows,
      '#empty' => t('Ningun trabajador asignado.'),
    );
    $variables['trabajadores'] = $build;

    // Display drodpown to navigate to other Departamentos.
    $form = \Drupal::formBuilder()->getForm('Drupal\carbray\Form\NavigateDepartamentosForm', $tid);

    $variables['otros_departamentos'] = $form;

    // Display objetivo progress bar.
    $progress = new ProgressBar('term');
    $progress->getDepartamentoObjetivo($tid);
    if (!$progress->cifra) {
      $variables['objetivo'] = t('Este departamento no tiene objetivo actual creado todavia.');
    }
    else {
      $variables['titulo_objetivo'] = 'Objetivo de ' . $progress->fecha_inicio . ' a ' . $progress->fecha_final;
      $variables['objetivo'] = $progress->buildArray();
    }
  }
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function carbray_theme_theme_suggestions_field_alter(&$suggestions, $vars, $hook) {
  $element = $vars['element'];
  // List all the fields that will need to output content without div wrappers.
  $nowrapper_fields = array(
    'name',
  );
  if (in_array($element['#field_name'], $nowrapper_fields)) {
    $suggestions[] = 'field' . '__' . 'nowrapper';
  }
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function carbray_theme_theme_suggestions_page_alter(array &$suggestions, array $variables) {
  // Add content type suggestions.
  if ($node = \Drupal::request()->attributes->get('node')) {
    array_splice($suggestions, 1, 0, 'page__node__' . $node->getType());
  }
}
