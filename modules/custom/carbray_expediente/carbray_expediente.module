<?php

/**
 * @file
 * Provides functionality needed for Carbray expedientes.
 */

use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
use Drupal\Core\Routing;
use Drupal\user\Entity\User;
use Drupal\node\Entity\Node;
use Drupal\taxonomy\Entity\Term;


/**
 * Implements hook_theme().
 */
function carbray_expediente_theme($existing, $type, $theme, $path) {
  return [
    'info_cliente' => [
      'variables' => [
        'cliente' => NULL,
      ],
    ],
  ];
}

/**
 * Implements hook_entity_extra_field_info().
 */
function carbray_expediente_entity_extra_field_info() {
  // Defines extra pseudo fields for display only purposes.
  // Exposes them to the user manage display ui.
  $extra = array();
  $extra['node']['expediente']['display']['info_cliente'] = array(
    'label' => t('Info cliente'),
    'description' => t('Muestra la informacion del cliente.'),
    'weight' => 100,
    'visible' => TRUE,
  );
  return $extra;
}

/**
 * Implements hook_entity_view().
 */
function carbray_expediente_node_view(array &$build, EntityInterface $entity, EntityViewDisplayInterface $display, $view_mode) {
  $nid = $entity->id();
  $type = $entity->bundle();
  if ($type != 'expediente') {
    return;
  }

  if ($display->getComponent('info_cliente')) {
    $expediente_node = Node::load($nid);
    $client_of_expediente = $expediente_node->field_expediente_cliente->getValue();
    $client_uid_of_expediente = $client_of_expediente[0]['target_id'];
    if ($client_uid_of_expediente) {
      $client = User::load($client_uid_of_expediente);
      $nombre = $client->get('field_nombre')->value;
      $apellido = $client->get('field_apellido')->value;
      $client_name = ucfirst($nombre) . ' ' . ucfirst($apellido);
      $build['cliente_expediente'] = [
        '#theme' => 'info_cliente',
        '#cliente' => $client_name,
      ];
    }

  }
}

/**
 * Helper function to obtain expedientes for a given user.
 *
 * @param string $expediente_nid
 */
function get_expedientes_for_cliente($uid) {
  $bundle = 'expediente';
  $query = \Drupal::entityQuery('node');
  $query->condition('status', 1);
  $query->condition('type', $bundle);
  $query->condition('field_expediente_cliente', $uid);
  $expediente_nids = $query->execute();
  return $expediente_nids;
}

/**
 * Prepares expediente node title to follow nomenclatura of expdientes:
 *  INICIAL-AÑO-NÚMERO CORRELATIVO
 *  Ejemplo: C-2017-1
 *
 * @param $tematica_tid
 * @return string
 */
function assign_expediente_title($tematica_tid) {
  // Let's get the count of expedientes for current year and tematica.
  $term = Term::load($tematica_tid);
  $tematica_nombre = $term->get('name')->value;
  $tematica_inicial = get_tematica_inicial($tematica_nombre);
  $expediente_title = $tematica_inicial . '-' . date('Y') . '-';

  $servicios = get_children_of_parent_term($tematica_tid, 'tematicas');
  $servicios_tids = [];
  foreach ($servicios as $servicio) {
    $servicios_tids[] = $servicio->tid;
  }

  $count = count_expedientes_for_current_year_and_tematica($servicios_tids);
  $new_count = (int)$count + 1;

  $expediente_title .= $new_count;
  return $expediente_title;
}

/**
 * Converts tematica term name into Carbray iniciales:
 *  Corporate: C
 *  Real Estate: RE
 *  Laboral: L
 *  Fiscal: F
 *  Familia: FA
 *  Inmigración: I
 *  Litigation Civil: LC
 * @param $tematica_nombre
 */
function get_tematica_inicial($tematica_nombre) {
  $inicial = '';
  switch ($tematica_nombre) {
    case 'Corporate':
      $inicial = 'c';
      break;
    case 'Real Estate':
      $inicial = 're';
      break;
    case 'Laboral':
      $inicial = 'l';
      break;
    case 'Fiscal':
      $inicial = 'f';
      break;
    case 'Familia':
      $inicial = 'fa';
      break;
    case 'Inmigracion':
      $inicial = 'i';
      break;
    case 'Litigacion civil':
      $inicial = 'lc';
      break;
  }

  return strtoupper($inicial);
}

function count_expedientes_for_current_year_and_tematica($servicios_tids) {
  $current_year = date('Y');
  $year_beginning_timestamp = strtotime($current_year . "-01-01");

  $query = \Drupal::database()->select('node__field_expediente_tematica', 't');
  $query->leftJoin('node_field_data', 'nfd', 'nfd.nid = t.entity_id');
  $query->addExpression('COUNT(*)');
  $query->condition('field_expediente_tematica_target_id', $servicios_tids, 'IN');
  $query->condition('created', $year_beginning_timestamp, ">=");
  $count = $query->execute()->fetchField();

  return $count;
}