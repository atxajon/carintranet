<?php

use Drupal\Core\Form\FormStateInterface;
use Drupal\user\Entity\User;


//define('REROUTE_EMAIL_ADDRESS', 'marc.mozos@carbray.es');
define('REROUTE_EMAIL_ADDRESS', 'jon.atxa@bondmason.com');


/**
 * Implements hook_mail_alter().
 */
function carbray_mailer_mail_alter(&$message) {
  $message['subject'] .= ' {Email para usuario ' . $message['to'] . ' }';
  // set 'To' field to dev email account, so Drupal won't email live users.
  $message['to'] = REROUTE_EMAIL_ADDRESS;
}


/**
 * Implements hook_mail().
 */
function carbray_mailer_mail($key, &$message, $params) {

  $message['headers']['MIME-Version'] = '1.0';
  $message['headers']['Content-Type'] = 'multipart/mixed; text/html; charset=UTF-8; format=flowed;';

  switch ($key) {
    case'notify_secretaria_new_factura':
      $message['from'] = \Drupal::config('system.site')->get('mail');
      $message['subject'] = t('Factura creada');
      $message['body'][] = carbray_mailer_new_factura($params);
      // @todo: enable this when production ready.
//      $message['headers']['Bcc'] = 'admin@carbray.es';
      break;
    case'notify_captador_factura_paid':
      $message['from'] = \Drupal::config('system.site')->get('mail');
      $message['subject'] = t('Factura pagada');
      $message['body'][] = carbray_mailer_factura_paid($params);
      break;
  }
}

function carbray_mailer_new_factura($params) {
  $vat_string =  '<p><span style="font-weigh: bold;">VAT: </span>';
  $is_vat = ($params['iva']) ? '21%' : '0%';
  $vat_string .= $is_vat . '</p>';

  $in_house_client_string =  '<li>In house client: ';
  $is_in_house = ($params['in_house']) ? 'Si' : 'No';
  $in_house_client_string .= $is_in_house . '</li>';

  $invoice_count =  '<li>';
  $count = ($params['invoice_count'] == 1) ? 'First invoice' : 'Second invoice';
  $invoice_count .= $count . '</li>';

  $output = '<h3>INVOICE REQUEST</h3>';
  $output .= '<p><span style="font-weigh: bold;">CLIENT: </span>' . $params['cliente'] . '</p>';
  $output .= '<p><span style="font-weigh: bold;">ADDRESS: </span>: ' . $params['direccion'] . '</p>';
  $output .= '<p><span style="font-weigh: bold;">NIF / NIE / PASSPORT: </span> ' . $params['nif'] . '</p>';
  $output .= '<p><span style="font-weigh: bold;">FIRST OR SECOND PAYMENT: </span>' . $params['nif'] . '</p>';
  $output .= '<p><span style="font-weigh: bold;">REFERENCE(S) + AMOUNT: </span></p>';
  $output .= '<ol>';
  foreach ($params['servicios'] as $key => $value) {
    $output .= '<li>' . key($value) . ': ' . current($value) . '&euro;</li>';
  }
  $output .= '</ol>';
  $output .= '<p><span style="font-weigh: bold;">Total: </span>' . $params['total'] . '&euro;</p>';
  $output .= $vat_string;
  $output .= '<p><span style="font-weigh: bold;">PROVISION OF FUNDS: </span>' . $params['provision_fondos'] . '&euro;</p>';
  $output .= '<p><span style="font-weigh: bold;">Client email: </span>' . $params['email'] . '</p>';
  $output .= '<p><span style="font-weigh: bold;">Client phone: </span>' . $params['telefono'] . '</p>';
  $output .= '<p><span style="font-weigh: bold;">Type of client: </span></p><ul>';
  $output .= '<li>Date of reception of the contact/landing: ' . date('d-m-Y', $params['captacion_date']) . '</li>';
  $output .= $in_house_client_string;
  $output .= $invoice_count;
  $output .= '</ul>';

  $proforma_factura_text = ($params['proforma']) ? 'Proforma' : 'Factura';
  $output .= $proforma_factura_text . " creada por " . $params['captador'] . " para ser revisada. ";
  return $output;
}

function carbray_mailer_factura_paid($params) {
  $output = "La factura " . $params['nif'] . " del cliente " . $params['cliente'] . " ha sido pagada.";
  return $output;
}

function send_email_secretaria(array &$form, FormStateInterface $form_state){
  $captador_uid = $form_state->getValue('captador_uid');
  $captador_user = User::load($captador_uid);
  $nif = $form_state->getValue('field_factura_nif');
  $captacion_date = $form_state->getValue('captacion_date');

  // Send email to notify users with role secretaria.
  $precio = $form_state->getValue('field_factura_precio');
  $direccion = $form_state->getValue('field_factura_direccion');
  $proforma = $form_state->getValue('field_factura_proforma');
  $prov_fondo = $form_state->getValue('field_factura_provision_de_fondo');
  $iva = $form_state->getValue('field_factura_iva');
  $in_house_client = $form_state->getValue('field_factura_in_house_client');

  $servicios = $form_state->getValue('field_factura_servicios');
  $all_servicios = [];
  foreach ($servicios as $servicio) {
    if (isset($servicio['subform'])) {
      $all_servicios[] = [
        $servicio['subform']['field_nombre_servicio'][0]['value'] => $servicio['subform']['field_coste_servicio'][0]['value'],
      ];
    }
  }
  $params = [
    'nif' => $nif[0]['value'],
    'captador' => $captador_user->get('field_nombre')->value . ' ' . $captador_user->get('field_apellido')->value,
    'cliente' => $form_state->getValue('cliente'),
    'email' => $form_state->getValue('email'),
    'telefono' => $form_state->getValue('telefono'),
    'total' => $precio[0]['value'],
    'proforma' => $proforma['value'],
    'direccion' => $direccion[0]['value'],
    'provision_fondos' => $prov_fondo[0]['value'],
    'servicios' => $all_servicios,
    'iva' => $iva['value'],
    'in_house' => $in_house_client['value'],
    'captacion_date' => $captacion_date,
    'invoice_count' => 'count of invoice',
  ];

  $secretarias = get_carbray_workers(TRUE, 'secretaria');
  foreach ($secretarias as $secretaria) {
    $to = $secretaria;
    $mailManager = \Drupal::service('plugin.manager.mail');
    $module = 'carbray_mailer';
    $langcode = \Drupal::currentUser()->getPreferredLangcode();
    $sent = $mailManager->mail($module, 'notify_secretaria_new_factura', $to, $langcode, $params);
    $mssg = ($sent) ? 'Email sent to ' . $secretaria . ' user of role secretaria as a new factura has been created' : '';
    \Drupal::logger('carbray')->warning($mssg);
  }
}

